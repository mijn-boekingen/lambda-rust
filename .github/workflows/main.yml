name: Main

on:
  push:
    branches:
      - main

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Build Image
        shell: bash
        run: |
          echo "docker_repo=${{ env.REPO }}" >> $GITHUB_ENV
          make build-arm64
        env:
          REPO: ${{ github.repository }}

      - name: Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.5.1
        with:
          image-ref: '${{ env.docker_repo }}:latest-arm64'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Build Image
        shell: bash
        run: make build-arm64

      # - name: Test Image
      #   shell: bash
      #   run: make test

  publish:
    needs: [scan, test]
    if: github.repository == 'mijn-boekingen/lambda-rust'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Build Image
        shell: bash
        run: make build-arm64

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Latest
        shell: bash
        run: |
          make publish-arm64
